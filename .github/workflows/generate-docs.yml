name: Generate Web Documentation

on:
  push:
    branches: [ main, master ]
    paths: 
      - 'README.md'
      - '.github/workflows/generate-docs.yml'
      - 'docs/**'
  pull_request:
    branches: [ main, master ]
    paths: 
      - 'README.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install tree command
      run: sudo apt-get update && sudo apt-get install -y tree

    - name: Create docs directory structure
      run: |
        mkdir -p docs/src
        mkdir -p docs/dist

    - name: Create package.json
      run: |
        cat > docs/package.json << 'EOF'
        {
          "name": "docs-generator",
          "version": "1.0.0",
          "scripts": {
            "build": "tailwindcss -i ./src/input.css -o ./dist/styles.css --watch=false --minify",
            "dev": "tailwindcss -i ./src/input.css -o ./dist/styles.css --watch"
          },
          "devDependencies": {
            "tailwindcss": "^3.4.0",
            "@tailwindcss/typography": "^0.5.10"
          }
        }
        EOF

    - name: Create Tailwind config
      run: |
        cat > docs/tailwind.config.js << 'EOF'
        /** @type {import('tailwindcss').Config} */
        module.exports = {
          content: ["./dist/*.html"],
          theme: {
            extend: {
              fontFamily: {
                'sans': ['Inter', 'system-ui', 'sans-serif'],
                'mono': ['JetBrains Mono', 'Fira Code', 'monospace'],
              },
              colors: {
                'brand': {
                  50: '#f0f9ff',
                  100: '#e0f2fe',
                  200: '#bae6fd',
                  300: '#7dd3fc',
                  400: '#38bdf8',
                  500: '#0ea5e9',
                  600: '#0284c7',
                  700: '#0369a1',
                  800: '#075985',
                  900: '#0c4a6e',
                },
              },
              animation: {
                'fade-in': 'fadeIn 0.5s ease-in-out',
                'slide-up': 'slideUp 0.5s ease-out',
                'float': 'float 6s ease-in-out infinite',
              },
              keyframes: {
                fadeIn: {
                  '0%': { opacity: '0' },
                  '100%': { opacity: '1' },
                },
                slideUp: {
                  '0%': { transform: 'translateY(20px)', opacity: '0' },
                  '100%': { transform: 'translateY(0)', opacity: '1' },
                },
                float: {
                  '0%, 100%': { transform: 'translateY(0px)' },
                  '50%': { transform: 'translateY(-10px)' },
                },
              },
            },
          },
          plugins: [
            require('@tailwindcss/typography'),
          ],
        }
        EOF

    - name: Create Tailwind input CSS
      run: |
        cat > docs/src/input.css << 'EOF'
        @tailwind base;
        @tailwind components;
        @tailwind utilities;

        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap');

        @layer base {
          html {
            scroll-behavior: smooth;
          }
          
          body {
            @apply bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800;
          }
        }

        @layer components {
          .glass-card {
            @apply bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm border border-white/20 dark:border-slate-700/50 rounded-xl shadow-lg;
          }
          
          .gradient-text {
            @apply bg-gradient-to-r from-brand-600 to-purple-600 bg-clip-text text-transparent;
          }
          
          .hover-lift {
            @apply transition-transform duration-300 hover:-translate-y-1 hover:shadow-xl;
          }
        }
        EOF

    - name: Install dependencies
      working-directory: docs
      run: npm install

    - name: Convert README to HTML and create documentation
      run: |
        # Install markdown processor
        npm install -g marked highlight.js

        # Read README content
        README_CONTENT=$(cat readme.md)
        
        # Convert README to HTML
        echo "$README_CONTENT" | marked > docs/readme_content.html

        # Create main HTML file
        cat > docs/dist/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en" class="scroll-smooth">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Documentation</title>
            <link href="./styles.css" rel="stylesheet">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/github-dark.min.css">
            <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>
            <script>
                // Theme toggle functionality
                function toggleTheme() {
                    const html = document.documentElement;
                    const isDark = html.classList.contains('dark');
                    
                    if (isDark) {
                        html.classList.remove('dark');
                        localStorage.setItem('theme', 'light');
                    } else {
                        html.classList.add('dark');
                        localStorage.setItem('theme', 'dark');
                    }
                }

                // Initialize theme
                function initTheme() {
                    const savedTheme = localStorage.getItem('theme');
                    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
                    
                    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {
                        document.documentElement.classList.add('dark');
                    }
                }

                // Initialize on load
                document.addEventListener('DOMContentLoaded', function() {
                    initTheme();
                    hljs.highlightAll();
                    
                    // Add smooth scrolling to navigation links
                    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                        anchor.addEventListener('click', function (e) {
                            e.preventDefault();
                            const target = document.querySelector(this.getAttribute('href'));
                            if (target) {
                                target.scrollIntoView({
                                    behavior: 'smooth',
                                    block: 'start'
                                });
                            }
                        });
                    });
                });
            </script>
        </head>
        <body class="font-sans antialiased text-slate-700 dark:text-slate-300 transition-colors duration-300">
            <!-- Navigation -->
            <nav class="fixed top-0 left-0 right-0 z-50 glass-card border-b border-white/10 dark:border-slate-700/50">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex items-center justify-between h-16">
                        <div class="flex items-center space-x-4">
                            <div class="flex-shrink-0">
                                <h1 class="text-xl font-bold gradient-text">Documentation</h1>
                            </div>
                        </div>
                        <div class="flex items-center space-x-4">
                            <button onclick="toggleTheme()" class="p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors duration-200">
                                <svg class="w-5 h-5 dark:hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path>
                                </svg>
                                <svg class="w-5 h-5 hidden dark:block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
                                </svg>
                            </button>
                            <a href="https://github.com" target="_blank" class="p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-700 transition-colors duration-200">
                                <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                                </svg>
                            </a>
                        </div>
                    </div>
                </div>
            </nav>

            <!-- Main Content -->
            <main class="pt-16 min-h-screen">
                <!-- Hero Section -->
                <section class="relative py-20 px-4 sm:px-6 lg:px-8 overflow-hidden">
                    <div class="absolute inset-0 bg-gradient-to-br from-brand-500/10 to-purple-500/10 dark:from-brand-500/5 dark:to-purple-500/5"></div>
                    <div class="relative max-w-7xl mx-auto">
                        <div class="text-center">
                            <div class="animate-float mb-8">
                                <div class="inline-flex items-center justify-center w-20 h-20 rounded-full bg-gradient-to-br from-brand-500 to-purple-600 shadow-lg">
                                    <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                    </svg>
                                </div>
                            </div>
                            <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold gradient-text mb-6 animate-slide-up">
                                Project Documentation
                            </h1>
                            <p class="text-xl text-slate-600 dark:text-slate-400 max-w-3xl mx-auto mb-8 animate-slide-up">
                                Comprehensive documentation generated from your README file
                            </p>
                            <div class="flex flex-col sm:flex-row gap-4 justify-center animate-slide-up">
                                <a href="#documentation" class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-brand-600 to-purple-600 text-white font-semibold rounded-lg shadow-lg hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300">
                                    <span>Read Documentation</span>
                                    <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
                                    </svg>
                                </a>
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Documentation Content -->
                <section id="documentation" class="py-16 px-4 sm:px-6 lg:px-8">
                    <div class="max-w-4xl mx-auto">
                        <div class="glass-card p-8 lg:p-12 hover-lift">
                            <div class="prose prose-slate dark:prose-invert max-w-none prose-headings:gradient-text prose-a:text-brand-600 dark:prose-a:text-brand-400 prose-code:bg-slate-100 dark:prose-code:bg-slate-800 prose-code:px-2 prose-code:py-1 prose-code:rounded prose-pre:bg-slate-900 prose-pre:border prose-pre:border-slate-700">
        EOF

        # Insert the converted README content
        cat docs/readme_content.html >> docs/dist/index.html

        # Close the HTML structure
        cat >> docs/dist/index.html << 'EOF'
                            </div>
                        </div>
                    </div>
                </section>

                <!-- Footer -->
                <footer class="py-12 px-4 sm:px-6 lg:px-8 border-t border-slate-200 dark:border-slate-700">
                    <div class="max-w-7xl mx-auto text-center">
                        <p class="text-slate-600 dark:text-slate-400">
                            Documentation generated automatically from README.md
                        </p>
                        <p class="text-sm text-slate-500 dark:text-slate-500 mt-2">
                            Last updated: <span id="last-updated"></span>
                        </p>
                    </div>
                </footer>
            </main>

            <script>
                // Set last updated time
                document.getElementById('last-updated').textContent = new Date().toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
            </script>
        </body>
        </html>
        EOF

    - name: Build Tailwind CSS
      working-directory: docs
      run: npm run build

    - name: Checking Files Structure
      run: |
        echo "=== Project Structure ==="
        tree -a -I '.git|node_modules' .
        echo ""
        echo "=== Docs Directory Structure ==="
        tree docs/
        echo ""
        echo "=== Generated Files ==="
        tree docs/dist/

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs/dist'

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
